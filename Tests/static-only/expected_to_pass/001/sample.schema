Namespace 1␟key 1␟string⍝  if you really insist on writing a same-line comment, then start it using the APL lamp

  Namespace 1␟key 1␟string ⍝ duplicate namespace::key pairs are OK as long as the type is the same
# Namespace 1␟key 1␟integer ⍝ BAD: conflicts with preceding line

# Namespace 9␟key 9␟int ⍝ BAD: no such thing as "int"  ;-)

# a line that`s all comment
  # a line that`s all comment after trimming

*␟key 2␟string ⍝ in schemas, namespaces are the _only_ fields that are allowed to be asterisk [meaning "for all"]
*␟key 2␟string ⍝ redundant, but should be considered OK
# *␟key 2␟integer ⍝ this is BAD, since it conflicts with "*␟key 2␟string"

# Namespace 2␟key 2␟integer ⍝ this is BAD, since it conflicts with "*␟key 2␟string"

Namespace 3␟key 2␟string ⍝ redundant WRT "*␟key 2␟string", but should be considered OK
# Namespace 3␟key 2␟integer ⍝ BAD: conflicting

  Namespace 4␟key 6␟nonnegative_integer
# Namespace 4␟key 6␟            integer ⍝ BAD: conflicting

*␟key 3␟nonnegative_integer
*␟key 4␟integer
*␟key 5␟nonempty_string

*␟test bad URL ␟URL
*␟test good URL␟URL

*␟test bad  nonempty_string␟nonempty_string
*␟test good nonempty_string␟nonempty_string

*␟test bad  nonnegative_integer␟nonnegative_integer
*␟test good nonnegative_integer␟nonnegative_integer

*␟test bad  positive_integer␟positive_integer
*␟test good positive_integer␟positive_integer

*␟test key name for configuration namespace-asterisk conflict checker␟integer

*␟test key name for a positive integer with redundancy     ␟      positive_integer
*␟test key name for a positive integer with at least one conflict␟positive_integer

# *␟test of a bad schema line due to an asterisk in the type position␟*
# *␟*␟string ⍝ test of a bad schema line due to an asterisk in the key position
