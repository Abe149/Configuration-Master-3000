=0␟Namespace 1␟key 1␟“string value”
>0␟Namespace 1␟key 1␟“string value”
<9␟Namespace 1␟key 2␟“string value”
>0␟Namespace 1␟key 1␟“string value”⍝  if you really insist on writing a same-line comment, then start it using the APL lamp
<9␟Namespace 1␟key 2␟“string value” ⍝ if you really insist on writing a same-line comment, then start it using the APL lamp

# blank lines are allowed, and comment lines are allowed, with a first non-{ASCII space} character of ‘#’
   # leading and trailing ASCII spaces should be ignored

≤9␟Namespace 1␟key 3␟42
≥9␟Namespace 1␟key 4␟-42

# maturity levels and namespaces can be specified as ‘*’ [without the quotes], meaning “all”;
#   for a maturity level, this is equivalent to specifying “≥0”

# *␟*␟bad key 1, not in schema␟“string value”
# *␟*␟bad key 2, not in schema␟“”
# *␟*␟bad key 3, not in schema␟ 0
# *␟*␟bad key 4, not in schema␟-1
# *␟*␟bad key 5, not in schema␟ 1
# *␟*␟bad key 6, not in schema␟ <> ⍝ invalid URL



# *␟*␟test bad URL ␟<>
# *␟*␟test bad URL ␟<foo>
  *␟*␟test good URL␟<http://www.fsf.org/>

# *␟*␟test bad  nonempty_string␟“”
  *␟*␟test good nonempty_string␟“string value”

# *␟*␟test bad  nonnegative_integer␟-1
  *␟*␟test good nonnegative_integer␟ 0

# *␟*␟test bad  positive_integer␟0
  *␟*␟test good positive_integer␟1

  *␟foo␟test good positive_integer␟1 ⍝ testing conflict detection: this is actually OK, as it is redundant [same value as the resepctive line with an asterisked namespace]

#  *␟foo␟test good positive_integer␟2 ⍝ testing conflict detection: this is _bad_ [conflicts with value of 1 in "*␟*␟test good positive_integer␟1"]



# *␟Namespace 1␟*␟9 ⍝ attempting to use '*' as the key will always fail; as of this writing, it fails simply b/c there is no matching [valid] entry in the schema, so the value cannot be type-checked


# --- testing aliases for maturity levels --- #
=sandbox␟Namespace 1␟key 5␟“string value for... maturity level "sandbox"            :: Namespace 1 :: key 5”
=dev    ␟Namespace 1␟key 5␟“string value for... maturity level "dev"                :: Namespace 1 :: key 5”
=test   ␟Namespace 1␟key 5␟“string value for... maturity level "test"               :: Namespace 1 :: key 5”
=UAT    ␟Namespace 1␟key 5␟“string value for... maturity level "UAT"                :: Namespace 1 :: key 5”
≥prod   ␟Namespace 1␟key 5␟“string value for... maturity level "prod" _or_ _higher_ :: Namespace 1 :: key 5”


### below this line: not yet supported ###
